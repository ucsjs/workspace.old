// Auto-generated by Blueprint 

import * as path from "path";
import { Subject } from 'rxjs';
import { Blueprint, Flow } from "@ucsjs/blueprint";
import { HTTPParamBlueprint } from "src/blueprints/Network/httpParam.blueprint";
import { HTTPBodyBlueprint } from "src/blueprints/Network/httpBody.blueprint";
import { MongoSchemaBlueprint } from "node_modules/@ucsjs/mongodb/src/blueprints/mongoSchema.blueprint";
import { HTTPInBlueprint } from "src/blueprints/Network/httpIn.blueprint";
import { MongoConnectionBlueprint } from "node_modules/@ucsjs/mongodb/src/blueprints/mongoConnection.blueprint";

export class HelloworldBlueprint extends Blueprint { 
	exec(){
		const subject = new Subject<any>();

		const flow = new Flow({
			httpparamblueprint1: new HTTPParamBlueprint({"name":"id","toJSON":true}),
			httpbodyblueprint2: new HTTPBodyBlueprint(),
			mongoschemablueprint3: new MongoSchemaBlueprint({"collection":"todo","fields":[{"unique":false,"index":true,"name":"id","typeInput":"Number","key":"0201a0411d7de880c8bd40d11274259eb733a0a9-6-0"},{"name":"title","key":"0201a0411d7de880c8bd40d11274259eb733a0a9-6-1"},{"name":"contents","key":"0201a0411d7de880c8bd40d11274259eb733a0a9-6-2"}]}),
			httpinblueprint4: new HTTPInBlueprint({"controller":"/todo","routes":[{"url":"/","key":"c782a1bf7f74c0a22eb8d764d6b7c9ba20300670-5-0"},{"url":"/:id","key":"c782a1bf7f74c0a22eb8d764d6b7c9ba20300670-5-1"},{"url":"/","method":"POST","key":"c782a1bf7f74c0a22eb8d764d6b7c9ba20300670-5-2"}]}),
			mongoconnectionblueprint5: new MongoConnectionBlueprint(),
		}, subject);

		flow.subscribe("mongoconnectionblueprint5", "connection", "mongoschemablueprint3", "connection")
		flow.start();

		return { flow, subject };
	}
}

export default HelloworldBlueprint;

import { Module, Controller, Req, Res, Get, Post, Put, Delete, Patch } from '@nestjs/common';
import { Request, Response } from "express";

@Controller("/todo")
export class HelloworldBlueprintController {
    private helloworldblueprint: HelloworldBlueprint;

    constructor(){
        this.helloworldblueprint = new HelloworldBlueprint();
    }

    @Get("/")
    async helloworldblueprintget_(@Req() req: Request, @Res() res: Response){
        const { subject, flow } = this.helloworldblueprint.exec();
        subject.subscribe((data) => { res.status(200).send(data); });
        flow.get("httpinblueprint4").next("c782a1bf7f74c0a22eb8d764d6b7c9ba20300670-5-0", req);
    }

    @Get("/:id")
    async helloworldblueprintget_id(@Req() req: Request, @Res() res: Response){
        const { subject, flow } = this.helloworldblueprint.exec();
        subject.subscribe((data) => { res.status(200).send(data); });
        flow.get("httpinblueprint4").next("c782a1bf7f74c0a22eb8d764d6b7c9ba20300670-5-1", req);
    }

    @Post("/")
    async helloworldblueprintpost_(@Req() req: Request, @Res() res: Response){
        const { subject, flow } = this.helloworldblueprint.exec();
        subject.subscribe((data) => { res.status(200).send(data); });
        flow.get("httpinblueprint4").next("c782a1bf7f74c0a22eb8d764d6b7c9ba20300670-5-2", req);
    }
}
        
@Module({
    controllers: [HelloworldBlueprintController]
})
export class LazyModule {}