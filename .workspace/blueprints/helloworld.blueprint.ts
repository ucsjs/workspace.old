// Auto-generated by Blueprint 

import * as path from "path";
import { Subject } from 'rxjs';
import { Blueprint, Type, Flow } from "@ucsjs/blueprint";
const { CounterBlueprint } = require(path.resolve("src/blueprints/Common/counter.blueprint.ts"));
const { SumBlueprint } = require(path.resolve("src/blueprints/Math/sum.blueprint.ts"));
const { NumberToStringBlueprint } = require(path.resolve("src/blueprints/Converters/numberToString.blueprint.ts"));
const { HashBlueprint } = require(path.resolve("src/blueprints/Encoding/hash.blueprint.ts"));

export class HelloworldBlueprint extends Blueprint { 
	exec(){
		const subject = new Subject<any>();

		new Flow({
			counterblueprint0: new CounterBlueprint({"increment":2}),
			sumblueprint1: new SumBlueprint(),
			numbertostringblueprint2: new NumberToStringBlueprint(),
			hashblueprint3: new HashBlueprint(),
			counterblueprint4: new CounterBlueprint({"increment":1}),
		}, subject)
		.subscribe("counterblueprint4", "counter", "sumblueprint1", "num2")
		.subscribe("sumblueprint1", "result", "numbertostringblueprint2", "number")
		.subscribe("counterblueprint0", "counter", "sumblueprint1", "num1")
		.subscribe("numbertostringblueprint2", "result", "hashblueprint3", "state")
		.output("hashblueprint3", "result")
		.start();

		return subject;
	}
}

export default HelloworldBlueprint;
